syntax = "proto3";

package eeta.bid;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "eeta/bid/params.proto";
import "eeta/bid/auction.proto";
import "eeta/bid/bid.proto";

option go_package = "eeta/x/bid/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/eeta/bids/params";
  
  }
  
  // Queries a list of ListAuction items.
  rpc ListAuction (QueryListAuctionRequest) returns (QueryListAuctionResponse) {
    option (google.api.http).get = "/eeta/bid/list_auction/{billboardId}";
  
  }
  
  // Queries a list of ListBid items.
  rpc ListBid (QueryListBidRequest) returns (QueryListBidResponse) {
    option (google.api.http).get = "/eeta/bid/list_bid/{billboardId}/{auctionId}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryListAuctionRequest {
  uint64                                billboardId = 1;
  cosmos.base.query.v1beta1.PageRequest pagination  = 2;
}

message QueryListAuctionResponse {
  repeated Auction                                auctions   = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryListBidRequest {
  uint64                                billboardId = 1;
  uint64                                auctionId   = 2;
  cosmos.base.query.v1beta1.PageRequest pagination  = 3;
}

message QueryListBidResponse {
  repeated Bid                                    bids       = 1  [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

